<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ming.bns.admin.mapper.bns.EquipItemMapper">

	<resultMap id="baseResultMap" type="com.ming.bns.admin.entity.bns.EquipItem">
	    <result column="id" property="id"/>
	    <result column="equip_id" property="equipId"/>
	    <result column="name" property="name"/>
	    <result column="sort" property="sort"/>
	    <result column="type" property="type"/>
	    <result column="children" property="children"/>
	    <result column="parent_id" property="parentId"/>
	</resultMap>

	<sql id="baseColumn">
	    id,
	    equip_id,
	    name,
	    sort,
	    type,
	    children,
	    parent_id
	</sql>

	<sql id="baseCondition">
		<where>
		    <if test="id != null"> and id = #{id}</if>
		    <if test="equipId != null"> and equip_id = #{equipId}</if>
		    <if test="name != null"> and name = #{name}</if>
		    <if test="sort != null"> and sort = #{sort}</if>
		    <if test="type != null"> and type = #{type}</if>
		    <if test="children != null"> and children = #{children}</if>
		    <if test="parentId != null"> and parent_id = #{parentId}</if>
		    <if test="childrenIds != null and childrenIds!=''">
				and id IN
				<foreach item="item" collection="childrenIds.split(',')" open="(" separator="," close=")">
					#{item}
				</foreach>
		    </if>
		</where>
	</sql>

    <sql id="basePage">
        <if test="pageStart != null and pageSize != null">
            LIMIT #{pageStart},#{pageSize}
        </if>
    </sql>

    <sql id="baseSort">
        <if test="pageSort != null and pageSort != ''">
            ORDER BY #{pageSort}
        </if>
    </sql>

    <select id="selectCount" resultType="int" parameterType="com.ming.bns.admin.vo.bns.EquipItemVo">
        SELECT count(1)
        from bns_equip_item
        <include refid="baseCondition"></include>
    </select>

    <select id="selectPage" resultMap="baseResultMap" parameterType="com.ming.bns.admin.vo.bns.EquipItemVo">
        SELECT <include refid="baseColumn"></include>
        from bns_equip_item
        <include refid="baseCondition"></include>
        <include refid="basePage"></include>
        <include refid="baseSort"></include>
    </select>

	<select id="selectList" resultMap="baseResultMap" parameterType="com.ming.bns.admin.vo.bns.EquipItemVo">
		SELECT <include refid="baseColumn"></include>
		from bns_equip_item
		<include refid="baseCondition"></include>
        <include refid="baseSort"></include>
	</select>

	<select id="selectOne" resultMap="baseResultMap" parameterType="com.ming.bns.admin.vo.bns.EquipItemVo">
		SELECT <include refid="baseColumn"></include>
		from bns_equip_item
		<include refid="baseCondition"></include>
        <include refid="baseSort"></include>
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.ming.bns.admin.entity.bns.EquipItem">
		insert into bns_equip_item
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="equipId != null">equip_id,</if>
			<if test="name != null">name,</if>
			<if test="sort != null">sort,</if>
			<if test="type != null">type,</if>
			<if test="children != null">children,</if>
			<if test="parentId != null">parent_id,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
		    <if test="equipId != null">#{equipId},</if>
		    <if test="name != null">#{name},</if>
		    <if test="sort != null">#{sort},</if>
		    <if test="type != null">#{type},</if>
		    <if test="children != null">#{children},</if>
		    <if test="parentId != null">#{parentId},</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.ming.bns.admin.entity.bns.EquipItem">
		update bns_equip_item
		<set>
			<if test="equipId != null">equip_id = #{equipId},</if>
			<if test="name != null">name = #{name},</if>
			<if test="sort != null">sort = #{sort},</if>
			<if test="type != null">type = #{type},</if>
			<if test="children != null">children = #{children},</if>
			<if test="parentId != null">parent_id = #{parentId},</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete" parameterType="java.lang.Long">
		delete from bns_equip_item
		where id = #{id}
	</delete>

	<delete id="deleteItems" parameterType="java.lang.Long">
		delete from bns_equip_item
		where equip_id = #{equipId}
	</delete>

	<delete id="deleteItem" parameterType="com.ming.bns.admin.vo.bns.EquipItemVo">
		delete from bns_equip_item
		where equip_id = #{equipId} and sort = #{sort}
	</delete>
</mapper>
